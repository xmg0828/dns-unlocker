cat > dns-unlocker.sh << 'EOF'
#!/bin/bash
# DNS解锁脚本 - 简化版

# 检查root权限
if [ "$(id -u)" != "0" ]; then
   echo "错误: 需要root权限" 1>&2
   exit 1
fi

# 安装必要软件
apt-get update
apt-get install -y dnsmasq jq

# 配置dnsmasq
setup_dnsmasq() {
  cat > /etc/dnsmasq.conf << EOFCONF
# 基础配置
cache-size=1024
no-resolv
server=8.8.8.8
server=8.8.4.4
listen-address=127.0.0.1
conf-dir=/etc/dnsmasq.d/,*.conf
EOFCONF

  # 创建目录
  mkdir -p /etc/dnsmasq.d/
}

# 配置Netflix
setup_netflix() {
  read -p "输入用于解锁Netflix的IP: " ip
  if [ -z "$ip" ]; then
    echo "错误: IP地址不能为空"
    return
  fi
  
  cat > /etc/dnsmasq.d/netflix.conf << EOFSTREAM
# Netflix
address=/netflix.com/$ip
address=/nflxext.com/$ip
address=/nflximg.com/$ip
address=/nflximg.net/$ip
address=/nflxvideo.net/$ip
address=/nflxso.net/$ip
address=/netflix.net/$ip
EOFSTREAM
  echo "Netflix解锁已配置"
}

# 配置Disney+
setup_disney() {
  read -p "输入用于解锁Disney+的IP: " ip
  if [ -z "$ip" ]; then
    echo "错误: IP地址不能为空"
    return
  fi
  
  cat > /etc/dnsmasq.d/disney.conf << EOFSTREAM
# Disney+
address=/disney.com/$ip
address=/disney-plus.net/$ip
address=/dssott.com/$ip
address=/disneyplus.com/$ip
address=/bamgrid.com/$ip
address=/disney-portal.my.onetrust.com/$ip
address=/disneystreaming.com/$ip
address=/disney.demdex.net/$ip
address=/disney.my.sentry.io/$ip
address=/cdn.registerdisney.go.com/$ip
address=/global.edge.bamgrid.com/$ip
address=/dssott.com.akamaized.net/$ip
address=/d9.flashtalking.com/$ip
address=/cdn.cdn.unid.go.com/$ip
address=/cws.conviva.com/$ip
EOFSTREAM
  echo "Disney+解锁已配置"
}

# 配置TikTok
setup_tiktok() {
  read -p "输入用于解锁TikTok的IP: " ip
  if [ -z "$ip" ]; then
    echo "错误: IP地址不能为空"
    return
  fi
  
  cat > /etc/dnsmasq.d/tiktok.conf << EOFSTREAM
# TikTok
address=/tiktok.com/$ip
address=/tiktokv.com/$ip
address=/tiktokcdn.com/$ip
address=/tiktokcdn-us.com/$ip
address=/tik-tokapi.com/$ip
address=/muscdn.com/$ip
EOFSTREAM
  echo "TikTok解锁已配置"
}

# 配置AI服务
setup_ai() {
  read -p "输入用于解锁AI服务(OpenAI/Claude/Gemini)的IP: " ip
  if [ -z "$ip" ]; then
    echo "错误: IP地址不能为空"
    return
  fi
  
  cat > /etc/dnsmasq.d/ai.conf << EOFAI
# OpenAI
address=/openai.com/$ip
address=/ai.com/$ip
address=/chat.openai.com/$ip
address=/api.openai.com/$ip
address=/platform.openai.com/$ip

# Claude
address=/anthropic.com/$ip
address=/claude.ai/$ip
address=/api.anthropic.com/$ip

# Gemini
address=/gemini.google.com/$ip
address=/bard.google.com/$ip
address=/generativelanguage.googleapis.com/$ip
EOFAI
  echo "AI服务解锁已配置"
}

# 添加自定义域名
setup_custom() {
  read -p "输入要解锁的自定义域名: " domain
  if [ -z "$domain" ]; then
    echo "错误: 域名不能为空"
    return
  fi
  
  read -p "输入用于解锁 $domain 的IP: " ip
  if [ -z "$ip" ]; then
    echo "错误: IP地址不能为空"
    return
  fi
  
  # 处理域名，去掉可能的http://或https://前缀
  domain=$(echo $domain | sed -e 's|^https\?://||')
  # 移除末尾可能的斜杠
  domain=${domain%/}
  
  cat > "/etc/dnsmasq.d/custom_${domain//./\_}.conf" << EOFCUSTOM
# 自定义域名: $domain
address=/$domain/$ip
EOFCUSTOM
  echo "自定义域名 $domain 解锁已配置"
}

# 应用配置
apply_config() {
  # 配置系统DNS
  cat > /etc/resolv.conf << EOFDNS
# Generated by dns-unlocker.sh
nameserver 127.0.0.1
EOFDNS

  # 重启服务
  systemctl restart dnsmasq
  if systemctl is-active --quiet dnsmasq; then
    echo "DNS解锁设置完成，dnsmasq服务已成功启动"
  else
    echo "警告: dnsmasq服务启动失败，请检查配置"
    journalctl -u dnsmasq -n 10
  fi
}

# 显示状态
show_status() {
  echo "当前DNS解锁状态:"
  echo "-------------------------"
  
  # 检查dnsmasq是否运行
  if systemctl is-active --quiet dnsmasq; then
    echo "dnsmasq 服务状态: 运行中"
  else
    echo "dnsmasq 服务状态: 未运行"
  fi
  
  # 列出已配置的解锁服务
  echo "已配置的解锁服务:"
  for conf in /etc/dnsmasq.d/*.conf; do
    if [ -f "$conf" ]; then
      service=$(basename "$conf" .conf)
      echo "- $service"
    fi
  done
  
  echo "-------------------------"
}

# 重置配置
reset_config() {
  read -p "确定要重置所有配置吗? (y/n): " confirm
  if [ "$confirm" = "y" ] || [ "$confirm" = "Y" ]; then
    # 恢复原始配置
    if [ -f "/etc/dnsmasq.conf.bak" ]; then
      cp /etc/dnsmasq.conf.bak /etc/dnsmasq.conf
    fi
    
    # 清除解锁服务的配置文件
    rm -f /etc/dnsmasq.d/*.conf
    
    # 重启dnsmasq
    systemctl restart dnsmasq
    
    echo "已重置所有DNS解锁配置"
  fi
}

# 主菜单
main_menu() {
  while true; do
    clear
    echo "==== DNS解锁脚本 v1.1 ===="
    echo "1. 解锁Netflix"
    echo "2. 解锁Disney+"
    echo "3. 解锁TikTok"
    echo "4. 解锁AI服务 (OpenAI/Claude/Gemini)"
    echo "5. 添加自定义域名解锁"
    echo "6. 应用配置并重启服务"
    echo "7. 显示当前解锁状态"
    echo "8. 重置所有配置"
    echo "0. 退出"
    echo "======================="
    read -p "请选择操作: " choice
    
    case $choice in
      1) setup_netflix ;;
      2) setup_disney ;;
      3) setup_tiktok ;;
      4) setup_ai ;;
      5) setup_custom ;;
      6) apply_config ;;
      7) 
         show_status
         read -p "按回车键继续..." dummy
         ;;
      8) reset_config ;;
      0) 
         echo "感谢使用DNS解锁脚本!"
         exit 0
         ;;
      *) 
         echo "无效的选择"
         sleep 2
         ;;
    esac
  done
}

# 主程序
# 备份dnsmasq配置
if [ ! -f "/etc/dnsmasq.conf.bak" ] && [ -f "/etc/dnsmasq.conf" ]; then
  cp /etc/dnsmasq.conf /etc/dnsmasq.conf.bak
fi

# 设置基本dnsmasq配置
setup_dnsmasq

# 显示主菜单
main_menu
EOF

chmod +x dns-unlocker.sh
